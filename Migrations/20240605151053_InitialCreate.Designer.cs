// <auto-generated />
using DnDCharacterCreator.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DnDCharacterCreator.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240605151053_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("DnDCharacterCreator.Models.Background", b =>
                {
                    b.Property<int>("Background_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Background_name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Bonds")
                        .HasColumnType("TEXT");

                    b.Property<string>("Flaws")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ideals")
                        .HasColumnType("TEXT");

                    b.HasKey("Background_id");

                    b.ToTable("Backgrounds");
                });

            modelBuilder.Entity("DnDCharacterCreator.Models.Characters", b =>
                {
                    b.Property<int>("Character_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Alignment")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Background")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Class")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Description")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EXP")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Hit_dice_total")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Hit_point_current")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Hit_point_maximum")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Inventory")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Languages")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Proficiency_bonus")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Race")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Skills")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Stats")
                        .HasColumnType("INTEGER");

                    b.Property<long>("User_id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Character_id");

                    b.HasIndex("Background");

                    b.HasIndex("Class");

                    b.HasIndex("Description");

                    b.HasIndex("Inventory");

                    b.HasIndex("Race");

                    b.HasIndex("Skills");

                    b.HasIndex("Stats");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("DnDCharacterCreator.Models.Class", b =>
                {
                    b.Property<int>("Class_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Class_Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Hit_die")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Save_proficiencies")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Class_id");

                    b.ToTable("Class");
                });

            modelBuilder.Entity("DnDCharacterCreator.Models.Classes", b =>
                {
                    b.Property<int>("Classes_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Artificer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Barbarian")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Bard")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Cleric")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Druid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Fighter")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Monk")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Paladin")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Ranger")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Rogue")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Sorcerer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Warlock")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Wizard")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Classes_id");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("DnDCharacterCreator.Models.Details", b =>
                {
                    b.Property<int>("Detail_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Eyes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Hair")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Height")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Skin")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Weight")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Detail_id");

                    b.ToTable("Details");
                });

            modelBuilder.Entity("DnDCharacterCreator.Models.Inventory", b =>
                {
                    b.Property<int>("Character_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Copper")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Electrum")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Equipment")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Gold")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Platinum")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Silver")
                        .HasColumnType("INTEGER");

                    b.HasKey("Character_id");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("DnDCharacterCreator.Models.Player", b =>
                {
                    b.Property<int>("Player_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Player_id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("DnDCharacterCreator.Models.Race", b =>
                {
                    b.Property<int>("Race_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Speed")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Race_id");

                    b.ToTable("Races");
                });

            modelBuilder.Entity("DnDCharacterCreator.Models.Skills", b =>
                {
                    b.Property<int>("Skill_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Skill_id");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("DnDCharacterCreator.Models.Spells", b =>
                {
                    b.Property<int>("Spell_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Casting_time")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Classes")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Components")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Range")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Spell_school")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Spell_id");

                    b.HasIndex("Classes");

                    b.ToTable("Spells");
                });

            modelBuilder.Entity("DnDCharacterCreator.Models.Stats", b =>
                {
                    b.Property<int>("Character_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Armor_class")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Charisma")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Constitution")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Dexterity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Health")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Initiative")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Intelligence")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Strength")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Wisdom")
                        .HasColumnType("INTEGER");

                    b.HasKey("Character_id");

                    b.ToTable("Stats");
                });

            modelBuilder.Entity("DnDCharacterCreator.Models.Characters", b =>
                {
                    b.HasOne("DnDCharacterCreator.Models.Background", null)
                        .WithMany()
                        .HasForeignKey("Background")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DnDCharacterCreator.Models.Class", null)
                        .WithMany()
                        .HasForeignKey("Class")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DnDCharacterCreator.Models.Details", null)
                        .WithMany()
                        .HasForeignKey("Description")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DnDCharacterCreator.Models.Inventory", null)
                        .WithMany()
                        .HasForeignKey("Inventory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DnDCharacterCreator.Models.Race", null)
                        .WithMany()
                        .HasForeignKey("Race")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DnDCharacterCreator.Models.Skills", null)
                        .WithMany()
                        .HasForeignKey("Skills")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DnDCharacterCreator.Models.Stats", null)
                        .WithMany()
                        .HasForeignKey("Stats")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DnDCharacterCreator.Models.Spells", b =>
                {
                    b.HasOne("DnDCharacterCreator.Models.Classes", null)
                        .WithMany()
                        .HasForeignKey("Classes")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
